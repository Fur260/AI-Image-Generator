import React, { useEffect, useState } from "react";

import { Card, FormField, Loader } from "../components";
import { apiUrl, removeDuplicateObjectsFromArray } from "../utils";

const RenderCards = ({ data, title }) => {
  if (data?.length) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [postsCount, setPostsCount] = useState(0);

  const [searchText, setSearchText] = useState("");
  const [debounceSearch, setDebounceSearch] = useState("");
  const [searchTimeout, setSearchTimeout] = useState(null);
  const [page, setPage] = useState(1);

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch(
        `${apiUrl}/api/v1/post?page=${page}&search=${debounceSearch}`,
        {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        }
      );

      if (response.ok) {
        const result = await response.json();
        const posts =
          debounceSearch && page == 1
            ? result.data
            : removeDuplicateObjectsFromArray([...allPosts, ...result.data]);
        setAllPosts(posts);
        setPostsCount(result.count);
      }
    } catch (err) {
      alert(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, [page, debounceSearch]);

  const handleSearchChange = (e) => {
    setLoading(true);
    setSearchText(e.target.value);
    clearTimeout(searchTimeout);

    setSearchTimeout(
      setTimeout(() => {
        setDebounceSearch(e.target.value);
        setPage(1);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[14px] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>

      <div className="mt-10">
        {loading && page === 1 ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing Resuls for{" "}
                <span className="text-[#222328]">{searchText}</span>:
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              <RenderCards data={allPosts} title="No Posts Yet" />
            </div>
            {postsCount > allPosts.length && (
              <div className="flex items-center justify-center mt-4">
                <button
                  className="p-4 rounded-lg bg-blue-700 text-white text-sm font-semibold font-inter"
                  onClick={() => setPage((page) => page + 1)}
                  disabled={loading}
                >
                  {loading ? "Loading..." : "Show More"}
                </button>
              </div>
            )}
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
